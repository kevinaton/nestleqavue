// <auto-generated />
using System;
using HRD.WebApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HRD.WebApi.Migrations
{
    [DbContext(typeof(HRDContext))]
    [Migration("20221011153456_UpdateTestCostYearDataType")]
    partial class UpdateTestCostYearDataType
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("HRD.WebApi.Data.Entities.DropDownItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DropDownTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<short>("SortOrder")
                        .HasColumnType("smallint");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("DropDownTypeId");

                    b.ToTable("DropDownItem", (string)null);
                });

            modelBuilder.Entity("HRD.WebApi.Data.Entities.DropDownType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("DropDownType", (string)null);
                });

            modelBuilder.Entity("HRD.WebApi.Data.Entities.Hrd", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AdditionalComments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdditionalDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool?>("AllCasesAccountedFor")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ApprovedByDistroyedWhen")
                        .HasColumnType("datetime");

                    b.Property<string>("ApprovedByDistroyedWho")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ApprovedByPlantControllerWhen")
                        .HasColumnType("datetime");

                    b.Property<string>("ApprovedByPlantControllerWho")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ApprovedByPlantManagerWho")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ApprovedByQawhen")
                        .HasColumnType("datetime")
                        .HasColumnName("ApprovedByQAWhen");

                    b.Property<string>("ApprovedByQawho")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ApprovedByQAWho");

                    b.Property<DateTime?>("ApprovedPlantManagerQawhen")
                        .HasColumnType("datetime")
                        .HasColumnName("ApprovedPlantManagerQAWhen");

                    b.Property<string>("Area")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AreaIfOther")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Bumanager")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BUManager");

                    b.Property<bool?>("Cancelled")
                        .HasColumnType("bit");

                    b.Property<int?>("Cases")
                        .HasColumnType("int");

                    b.Property<bool?>("CauseMachine")
                        .HasColumnType("bit");

                    b.Property<bool?>("CauseMan")
                        .HasColumnType("bit");

                    b.Property<bool?>("CauseMaterial")
                        .HasColumnType("bit");

                    b.Property<bool?>("CauseMethod")
                        .HasColumnType("bit");

                    b.Property<string>("Classification")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Clear")
                        .HasColumnType("int");

                    b.Property<string>("CodingDetails")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CodingType")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Comments")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool?>("Complete")
                        .HasColumnType("bit");

                    b.Property<bool?>("ContactOtherPlant")
                        .HasColumnType("bit");

                    b.Property<string>("ContinuousRun")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal?>("CostofProductonHold")
                        .HasColumnType("money");

                    b.Property<DateTime?>("DateCompleted")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateHeld")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateOfResample")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateReceived")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateReleased")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateofDisposition")
                        .HasColumnType("datetime");

                    b.Property<string>("DayCode")
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.Property<string>("DayOfWeek")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("Dcdate")
                        .HasColumnType("datetime")
                        .HasColumnName("DCDate");

                    b.Property<string>("Dcuser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("DCUser");

                    b.Property<string>("DetailedDescription")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Donate")
                        .HasColumnType("int");

                    b.Property<string>("Equipment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EquipmentIfOther")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FMSource")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FMVendorBatch")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("Fcdate")
                        .HasColumnType("datetime")
                        .HasColumnName("FCDate");

                    b.Property<string>("Fcuser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FCUser");

                    b.Property<string>("FertDescription")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Fmtype")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FMType");

                    b.Property<int?>("Ftqcases")
                        .HasColumnType("int")
                        .HasColumnName("FTQCases");

                    b.Property<string>("Globenum")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("GLOBENum");

                    b.Property<bool?>("Gstdrequired")
                        .HasColumnType("bit")
                        .HasColumnName("GSTDRequired");

                    b.Property<bool?>("HighRisk")
                        .HasColumnType("bit");

                    b.Property<string>("HoldCategory")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("HoldConcern")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("HoldSubCategory")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("HourCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("HrdcompletedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("HRDCompletedBy");

                    b.Property<string>("IfYesAffectedProduct")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InspectorsName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("IsApprovalRequestByQa")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDestroyed")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsFm")
                        .HasColumnType("bit")
                        .HasColumnName("IsFM");

                    b.Property<bool?>("IsHrd")
                        .HasColumnType("bit")
                        .HasColumnName("IsHRD");

                    b.Property<bool?>("IsInspections")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsMetalDetector")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsMicro")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNr")
                        .HasColumnType("bit")
                        .HasColumnName("IsNR");

                    b.Property<bool?>("IsPest")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPlantControllerApproval")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPlantManagerAprpoval")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSmi")
                        .HasColumnType("bit")
                        .HasColumnName("IsSMI");

                    b.Property<bool?>("IsXray")
                        .HasColumnType("bit");

                    b.Property<decimal?>("LaborHours")
                        .HasColumnType("numeric(10,4)");

                    b.Property<DateTime?>("LastChange")
                        .HasColumnType("datetime");

                    b.Property<string>("LastChangeUser")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Lcl")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LCL");

                    b.Property<string>("Line")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LineSupervisor")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MaterialNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MeatComponent")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("NonFtqcases")
                        .HasColumnType("int")
                        .HasColumnName("NonFTQCases");

                    b.Property<string>("Nrcategory")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NRCategory");

                    b.Property<int?>("NumberOfDayToReworkApproval")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfDaysHeld")
                        .HasColumnType("int");

                    b.Property<string>("Originator")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("OtherHrdaffected")
                        .HasColumnType("bit")
                        .HasColumnName("OtherHRDAffected");

                    b.Property<string>("OtherHrdnum")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("OtherHRDNum");

                    b.Property<string>("PcocontactedImmediately")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PCOContactedImmediately");

                    b.Property<string>("PestType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("Physical5DaysGstd")
                        .HasColumnType("bit")
                        .HasColumnName("Physical5DaysGSTD");

                    b.Property<bool?>("PhysicalIsolationNeeded")
                        .HasColumnType("bit");

                    b.Property<string>("PiecesTotal")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Plant")
                        .HasMaxLength(4)
                        .HasColumnType("nchar(4)")
                        .IsFixedLength();

                    b.Property<string>("Pos")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("POs");

                    b.Property<string>("Problem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductAdultered")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Qacomments")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("QAComments");

                    b.Property<string>("RawMaterialDescription")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool?>("RejectOrNinePack")
                        .HasColumnType("bit");

                    b.Property<string>("Response")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("ReworkApproved")
                        .HasColumnType("bit");

                    b.Property<string>("ReworkApprovedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ReworkApprovedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ReworkComplete")
                        .HasColumnType("datetime");

                    b.Property<string>("ReworkCompletedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ReworkInstructions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ReworkOutsideNormalProduction")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ReworkStarted")
                        .HasColumnType("datetime");

                    b.Property<string>("Rohmaterial")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ROHMaterial");

                    b.Property<string>("SMIVendorBatch")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Samples")
                        .HasColumnType("int");

                    b.Property<string>("SauceType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Schedule")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Scrap")
                        .HasColumnType("int");

                    b.Property<int?>("ScrapCaseCount")
                        .HasColumnType("int");

                    b.Property<string>("ScrapReasonAction")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool?>("SecondaryNotification")
                        .HasColumnType("bit");

                    b.Property<string>("Shift")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ShortDescription")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("Size")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("StarchType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TagNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Tagged")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("TestingCost")
                        .HasColumnType("money");

                    b.Property<int?>("ThriftStore")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TimeOfIncident")
                        .HasColumnType("datetime2");

                    b.Property<string>("TlforFu")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TLforFU");

                    b.Property<int?>("Total")
                        .HasColumnType("int");

                    b.Property<bool?>("UnpalletizedProductHeld")
                        .HasColumnType("bit");

                    b.Property<string>("VeggieComponent")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VendorName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VendorNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VendorSiteNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("When")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("WhenOther")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("WhereFound")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("YearHeld")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("YearOfIncident")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.HasKey("Id");

                    b.ToTable("HRD", (string)null);
                });

            modelBuilder.Entity("HRD.WebApi.Data.Entities.Hrddc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Hrdid")
                        .HasColumnType("int")
                        .HasColumnName("HRDId");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("NumberOfCases")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Hrdid");

                    b.ToTable("HRDDC", (string)null);
                });

            modelBuilder.Entity("HRD.WebApi.Data.Entities.Hrdfc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Hrdid")
                        .HasColumnType("int")
                        .HasColumnName("HRDId");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("NumberOfCases")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Hrdid");

                    b.ToTable("HRDFC", (string)null);
                });

            modelBuilder.Entity("HRD.WebApi.Data.Entities.HrdMicro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<int>("Hour")
                        .HasColumnType("int");

                    b.Property<int>("HrdId")
                        .HasColumnType("int")
                        .HasColumnName("HRDId");

                    b.Property<string>("Organism")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("HrdId");

                    b.ToTable("HRDMicro", (string)null);
                });

            modelBuilder.Entity("HRD.WebApi.Data.Entities.Hrdnote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Category")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<int>("Hrdid")
                        .HasColumnType("int")
                        .HasColumnName("HRDId");

                    b.Property<string>("Path")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("Size")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UserId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("UserID");

                    b.HasKey("Id");

                    b.HasIndex("Hrdid");

                    b.ToTable("HRDNotes", (string)null);
                });

            modelBuilder.Entity("HRD.WebApi.Data.Entities.Hrdpo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Hrdid")
                        .HasColumnType("int")
                        .HasColumnName("HRDId");

                    b.Property<string>("Ponumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("PONumber");

                    b.HasKey("Id");

                    b.HasIndex("Hrdid");

                    b.ToTable("HRDPO", (string)null);
                });

            modelBuilder.Entity("HRD.WebApi.Data.Entities.HrdtestCost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal?>("Cost")
                        .HasColumnType("money");

                    b.Property<int>("Hrdid")
                        .HasColumnType("int")
                        .HasColumnName("HRDId");

                    b.Property<int?>("Qty")
                        .HasColumnType("int");

                    b.Property<string>("TestName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Hrdid");

                    b.ToTable("HRDTestCost", (string)null);
                });

            modelBuilder.Entity("HRD.WebApi.Data.Entities.LaborCost", b =>
                {
                    b.Property<string>("Year")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("char(4)")
                        .IsFixedLength();

                    b.Property<decimal?>("LaborCostValue")
                        .HasColumnType("smallmoney")
                        .HasColumnName("LaborCost");

                    b.HasKey("Year");

                    b.ToTable("LaborCost", (string)null);
                });

            modelBuilder.Entity("HRD.WebApi.Data.Entities.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsGranted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Permissions", (string)null);
                });

            modelBuilder.Entity("HRD.WebApi.Data.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal?>("CostPerCase")
                        .HasColumnType("money");

                    b.Property<string>("Country")
                        .HasMaxLength(2)
                        .HasColumnType("nchar(2)")
                        .IsFixedLength();

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Gpn")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("GPN")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("Holiday")
                        .HasColumnType("bit");

                    b.Property<bool?>("NoBbdate")
                        .HasColumnType("bit")
                        .HasColumnName("NoBBDate");

                    b.Property<string>("Year")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(4)
                        .HasColumnType("nchar(4)")
                        .HasDefaultValueSql("((0))")
                        .IsFixedLength();

                    b.HasKey("Id");

                    b.ToTable("Product", (string)null);
                });

            modelBuilder.Entity("HRD.WebApi.Data.Entities.RawMaterial", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("char(8)")
                        .IsFixedLength();

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.HasKey("Id");

                    b.ToTable("RawMaterials", (string)null);
                });

            modelBuilder.Entity("HRD.WebApi.Data.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("IsStatic")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DisplayName = "Admin",
                            IsStatic = true,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            DisplayName = "Data Entry",
                            IsStatic = true,
                            Name = "DataEntry"
                        },
                        new
                        {
                            Id = 3,
                            DisplayName = "Report Viewer",
                            IsStatic = true,
                            Name = "ReportViewer"
                        });
                });

            modelBuilder.Entity("HRD.WebApi.Data.Entities.Security", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool?>("Administrator")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("Bumgrp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("BUMGrp")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("DeleteHrd")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("DeleteHRD")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("EditHrdapproveRework")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("EditHRDApproveRework")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("Gstdgrp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("GSTDGrp")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("GstdnotificationGrp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("GSTDNotificationGrp")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("LaborCostList")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("Notification")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("Physical5Grp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("PhysicalGrp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("ProdMaintenanceList")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("ProdTlgrp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("ProdTLGrp")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("Qamanager")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("QAManager")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("QaprodRelGrp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("QAProdRelGrp")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("Qatgrp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("QATGrp")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("ReworkMembersGrp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Type")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.HasKey("Id");

                    b.ToTable("Security", (string)null);
                });

            modelBuilder.Entity("HRD.WebApi.Data.Entities.Setting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Type")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Value")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("HRD.WebApi.Data.Entities.TestCost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal?>("TestCostValue")
                        .HasColumnType("money")
                        .HasColumnName("TestCost");

                    b.Property<string>("TestName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Year")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TestCost", (string)null);
                });

            modelBuilder.Entity("HRD.WebApi.Data.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("UserID");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("HRD.WebApi.Data.Entities.UserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId")
                        .HasName("PK__UserRole__AF2760ADD67758F1");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRole", (string)null);
                });

            modelBuilder.Entity("HRD.WebApi.Data.Entities.DropDownItem", b =>
                {
                    b.HasOne("HRD.WebApi.Data.Entities.DropDownType", "DropDownType")
                        .WithMany("DropDownItems")
                        .HasForeignKey("DropDownTypeId")
                        .IsRequired()
                        .HasConstraintName("FK__DropDownI__DropD__286302EC");

                    b.Navigation("DropDownType");
                });

            modelBuilder.Entity("HRD.WebApi.Data.Entities.Hrddc", b =>
                {
                    b.HasOne("HRD.WebApi.Data.Entities.Hrd", "Hrd")
                        .WithMany("Hrddcs")
                        .HasForeignKey("Hrdid")
                        .IsRequired()
                        .HasConstraintName("FK__HRDDC__HRDId__30F848ED");

                    b.Navigation("Hrd");
                });

            modelBuilder.Entity("HRD.WebApi.Data.Entities.Hrdfc", b =>
                {
                    b.HasOne("HRD.WebApi.Data.Entities.Hrd", "Hrd")
                        .WithMany("Hrdfcs")
                        .HasForeignKey("Hrdid")
                        .IsRequired()
                        .HasConstraintName("FK__HRDFC__HRDId__2E1BDC42");

                    b.Navigation("Hrd");
                });

            modelBuilder.Entity("HRD.WebApi.Data.Entities.HrdMicro", b =>
                {
                    b.HasOne("HRD.WebApi.Data.Entities.Hrd", "Hrd")
                        .WithMany("HrdMicros")
                        .HasForeignKey("HrdId")
                        .IsRequired();

                    b.Navigation("Hrd");
                });

            modelBuilder.Entity("HRD.WebApi.Data.Entities.Hrdnote", b =>
                {
                    b.HasOne("HRD.WebApi.Data.Entities.Hrd", "Hrd")
                        .WithMany("Hrdnotes")
                        .HasForeignKey("Hrdid")
                        .IsRequired()
                        .HasConstraintName("FK__HRDNotes__HRDId__398D8EEE");

                    b.Navigation("Hrd");
                });

            modelBuilder.Entity("HRD.WebApi.Data.Entities.Hrdpo", b =>
                {
                    b.HasOne("HRD.WebApi.Data.Entities.Hrd", "Hrd")
                        .WithMany("Hrdpos")
                        .HasForeignKey("Hrdid")
                        .IsRequired()
                        .HasConstraintName("FK__HRDPO__HRDId__2B3F6F97");

                    b.Navigation("Hrd");
                });

            modelBuilder.Entity("HRD.WebApi.Data.Entities.HrdtestCost", b =>
                {
                    b.HasOne("HRD.WebApi.Data.Entities.Hrd", "Hrd")
                        .WithMany("HrdtestCosts")
                        .HasForeignKey("Hrdid")
                        .IsRequired()
                        .HasConstraintName("FK__HRDTestCo__HRDId__4222D4EF");

                    b.Navigation("Hrd");
                });

            modelBuilder.Entity("HRD.WebApi.Data.Entities.Permission", b =>
                {
                    b.HasOne("HRD.WebApi.Data.Entities.Role", "Role")
                        .WithMany("Permissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("HRD.WebApi.Data.Entities.UserRole", b =>
                {
                    b.HasOne("HRD.WebApi.Data.Entities.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HRD.WebApi.Data.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HRD.WebApi.Data.Entities.DropDownType", b =>
                {
                    b.Navigation("DropDownItems");
                });

            modelBuilder.Entity("HRD.WebApi.Data.Entities.Hrd", b =>
                {
                    b.Navigation("HrdMicros");

                    b.Navigation("Hrddcs");

                    b.Navigation("Hrdfcs");

                    b.Navigation("Hrdnotes");

                    b.Navigation("Hrdpos");

                    b.Navigation("HrdtestCosts");
                });

            modelBuilder.Entity("HRD.WebApi.Data.Entities.Role", b =>
                {
                    b.Navigation("Permissions");

                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
